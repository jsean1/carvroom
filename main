local Players = game:GetService("Players")
local http = game:GetService("HttpService")
local webhook = "https://discord.com/api/webhooks/969986002208837642/_wPGBCUc3cuF8az3DQoDk9xe8nIls6iBAhs8EApYk36sGqAcBxjw1YIhQ0h7lxaVOog8" -- Replace this with your webhook URL

local startTime = tick()  -- Get the initial time when the script starts
local startCashValue = Players.LocalPlayer.leaderstats.Money.Value  -- Get the initial cash value when the script starts

local lastCashValue = startCashValue

-- Function to send a webhook message
local function sendWebhook(content)
    local data = {
        content = content
    }
    local requestBody = http:JSONEncode(data)

    local s = request({
        Url = webhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = requestBody
    })

    table.foreach(s,print)
end

-- Function to handle player joining
local function onPlayerAdded(player)
    local playerName = player.Name
    local content = string.format("Player %s has joined the server", playerName)
    sendWebhook(content)
end

-- Function to handle player leaving
local function onPlayerRemoving(player)
    local playerName = player.Name
    local content = string.format("Player %s has left the server", playerName)
    sendWebhook(content)
end

-- Connect event handlers for player join and leave
Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(onPlayerRemoving)

-- Function to create cash change alert and send webhook
local function sendCashChangeAlert()
    local playerName = Players.LocalPlayer.Name
    local playerDisplayName = Players.LocalPlayer.DisplayName
    local userId = Players.LocalPlayer.UserId
    local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
    local newCashValue = Players.LocalPlayer.leaderstats.Money.Value
    
    local formattedNewCashValue = tostring(newCashValue):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
    local formattedLastCashValue = tostring(lastCashValue):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
    
    local cashChange = newCashValue - lastCashValue
    local formattedCashChange = tostring(cashChange):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")

    local elapsedTime = tick() - startTime  -- Calculate elapsed time since the script started

    local minutes = math.floor(elapsedTime / 60)
    local seconds = math.floor(elapsedTime % 60)

    local formattedTime = string.format("%d minutes, %d seconds", minutes, seconds)

    local incomePerMinute = (newCashValue - startCashValue) / elapsedTime * 60
    local formattedIncome = string.format("%.2f", incomePerMinute)

    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()

    local data = {
        content = "",
        embeds = {{
            title = "Cash Change Alert",
            description = "Detected changes in cash value",
            type = "rich",
            color = tonumber(0x00FF00),  -- Green color
            fields = {
                {
                    name = "User Information:",
                    value = string.format("```Username: %s\nDisplay Name: %s\nUser ID: %s\nHWID: %s```", playerName, playerDisplayName, userId, hwid),
                    inline = false
                },
                {
                    name = "Cash Details:",
                    value = string.format("```New Cash Value: %s\nOld Cash Value: %s\nChange: %s```", formattedNewCashValue, formattedLastCashValue, formattedCashChange),
                    inline = false
                },
                {
                    name = "Income Per Minute:",
                    value = string.format("```%s```", formattedIncome),
                    inline = true
                },
                {
                    name = "Ping:",
                    value = string.format("```%s```", ping),
                    inline = true
                }
            },
            -- Add the player's avatar image as a thumbnail
            thumbnail = {
                url = "https://i.pinimg.com/236x/c0/88/c3/c088c3e75b251a51cae1fca084cb581a.jpg"
            },
            -- Add the footer with the provided image URL and message
            footer = {
                text = "My efforts!",
                icon_url = "https://i.pinimg.com/236x/19/b6/00/19b600c0cd325e8d2b94aab4cb80685e.jpg"
            }
        }}
    }

    local requestBody = http:JSONEncode(data)

    local s = request({
        Url = webhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = requestBody
    })

    table.foreach(s,print)
end

-- Set the function in getgenv
getgenv().onCashChangeAlert = sendCashChangeAlert

-- Execute the cash change alert initially
getgenv().onCashChangeAlert()

-- Run the cash change alert every 1 minute
while true do
    wait(60)
    getgenv().onCashChangeAlert()
end
